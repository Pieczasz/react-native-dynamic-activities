///
/// HybridDynamicActivitiesSpec.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `LiveActivitiesSupportInfo` to properly resolve imports.
namespace margelo::nitro::dynamicactivities { struct LiveActivitiesSupportInfo; }
// Forward declaration of `LiveActivityStartResult` to properly resolve imports.
namespace margelo::nitro::dynamicactivities { struct LiveActivityStartResult; }
// Forward declaration of `LiveActivityAttributes` to properly resolve imports.
namespace margelo::nitro::dynamicactivities { struct LiveActivityAttributes; }
// Forward declaration of `LiveActivityContent` to properly resolve imports.
namespace margelo::nitro::dynamicactivities { struct LiveActivityContent; }
// Forward declaration of `LiveActivityPushToken` to properly resolve imports.
namespace margelo::nitro::dynamicactivities { struct LiveActivityPushToken; }
// Forward declaration of `LiveActivityStyle` to properly resolve imports.
namespace margelo::nitro::dynamicactivities { enum class LiveActivityStyle; }
// Forward declaration of `LiveActivityAlertConfiguration` to properly resolve imports.
namespace margelo::nitro::dynamicactivities { struct LiveActivityAlertConfiguration; }
// Forward declaration of `LiveActivityDismissalPolicy` to properly resolve imports.
namespace margelo::nitro::dynamicactivities { enum class LiveActivityDismissalPolicy; }

#include "LiveActivitiesSupportInfo.hpp"
#include <NitroModules/Promise.hpp>
#include "LiveActivityStartResult.hpp"
#include "LiveActivityAttributes.hpp"
#include "LiveActivityContent.hpp"
#include "LiveActivityPushToken.hpp"
#include <optional>
#include "LiveActivityStyle.hpp"
#include "LiveActivityAlertConfiguration.hpp"
#include <chrono>
#include <string>
#include "LiveActivityDismissalPolicy.hpp"

namespace margelo::nitro::dynamicactivities {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `DynamicActivities`
   * Inherit this class to create instances of `HybridDynamicActivitiesSpec` in C++.
   * You must explicitly call `HybridObject`'s constructor yourself, because it is virtual.
   * @example
   * ```cpp
   * class HybridDynamicActivities: public HybridDynamicActivitiesSpec {
   * public:
   *   HybridDynamicActivities(...): HybridObject(TAG) { ... }
   *   // ...
   * };
   * ```
   */
  class HybridDynamicActivitiesSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridDynamicActivitiesSpec(): HybridObject(TAG) { }

      // Destructor
      ~HybridDynamicActivitiesSpec() override = default;

    public:
      // Properties
      

    public:
      // Methods
      virtual std::shared_ptr<Promise<LiveActivitiesSupportInfo>> areLiveActivitiesSupported() = 0;
      virtual std::shared_ptr<Promise<LiveActivityStartResult>> startLiveActivity(const LiveActivityAttributes& attributes, const LiveActivityContent& content, const std::optional<LiveActivityPushToken>& pushToken, std::optional<LiveActivityStyle> style, const std::optional<LiveActivityAlertConfiguration>& alertConfiguration, std::optional<std::chrono::system_clock::time_point> start) = 0;
      virtual std::shared_ptr<Promise<void>> updateLiveActivity(const std::string& activityId, const LiveActivityContent& content, const std::optional<LiveActivityAlertConfiguration>& alertConfiguration, std::optional<std::chrono::system_clock::time_point> timestamp) = 0;
      virtual std::shared_ptr<Promise<void>> endLiveActivity(const std::string& activityId, const LiveActivityContent& content, std::optional<LiveActivityDismissalPolicy> dismissalPolicy, std::optional<std::chrono::system_clock::time_point> timestamp) = 0;

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "DynamicActivities";
  };

} // namespace margelo::nitro::dynamicactivities
